<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://xiyu.pro</id>
    <title>Xi Yu</title>
    <updated>2022-02-27T11:28:17.453Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://xiyu.pro"/>
    <link rel="self" href="https://xiyu.pro/atom.xml"/>
    <subtitle>学海无涯，回头是岸</subtitle>
    <logo>https://xiyu.pro/images/avatar.png</logo>
    <icon>https://xiyu.pro/favicon.ico</icon>
    <rights>All rights reserved 2022, Xi Yu</rights>
    <entry>
        <title type="html"><![CDATA[利用crypto-js实现静态网页文章加密]]></title>
        <id>https://xiyu.pro/post/15/</id>
        <link href="https://xiyu.pro/post/15/">
        </link>
        <updated>2022-02-27T09:28:50.000Z</updated>
        <content type="html"><![CDATA[<h2 id="crypto-js是什么">crypto-js是什么</h2>
<p>使用crypto-js也是很久之前的事了，一直都没有好好整理，今天借助博客重构的机会，好好捋一下。crypto-js是一个加密算法库，支持哈希算法，如：MD5、SHA-1、SHA-2、SHA-3、RIPEMD-160也支持多种加密方式，如：AES、DES, Triple DES、Rabbit、RC4, RC4Drop。可实现多种多样的加密算法。</p>
<h2 id="使用">使用</h2>
<p>在<a href="https://github.com/brix/crypto-js">github.com/brix/crypto-js</a> 上引入相关文件，因为我只需要使用aes加密算法，所以没有引入整个库而是只下载了aes.js单个文件。<br>
借助强大的crypto-js，我们只需要几行代码就可以实现加密效果，下面是一个使用aes加密的demo，效果为在页面加密字符串“123456”，并解密加密的密文。</p>
<pre><code>&lt;!DOCTYPE html&gt;
&lt;html lang=&quot;en&quot;&gt;

&lt;head&gt;
    &lt;meta charset=&quot;UTF-8&quot;&gt;
    &lt;title&gt;Title&lt;/title&gt;
    &lt;script src=&quot;./aes.js&quot;&gt;&lt;/script&gt;
&lt;/head&gt;

&lt;body&gt;
    &lt;script&gt;
        //aes加密
        function encrypt(word) {
            var key = CryptoJS.enc.Utf8.parse(&quot;1234560000000000&quot;); //16位
            var iv = CryptoJS.enc.Utf8.parse(&quot;1234567890000000&quot;);
            var encrypted = '';
            if (typeof (word) == 'string') {
                var srcs = CryptoJS.enc.Utf8.parse(word);
                encrypted = CryptoJS.AES.encrypt(srcs, key, {
                    iv: iv,
                    mode: CryptoJS.mode.CBC,
                    padding: CryptoJS.pad.Pkcs7
                });
            } else if (typeof (word) == 'object') { //对象格式的转成json字符串
                data = JSON.stringify(word);
                var srcs = CryptoJS.enc.Utf8.parse(data);
                encrypted = CryptoJS.AES.encrypt(srcs, key, {
                    iv: iv,
                    mode: CryptoJS.mode.CBC,
                    padding: CryptoJS.pad.Pkcs7
                })
            }
            return encrypted.ciphertext.toString();
        }
        // aes解密
        function decrypt(word) {
            var key = CryptoJS.enc.Utf8.parse(&quot;1234560000000000&quot;);
            var iv = CryptoJS.enc.Utf8.parse(&quot;1234567890000000&quot;);
            var encryptedHexStr = CryptoJS.enc.Hex.parse(word);
            var srcs = CryptoJS.enc.Base64.stringify(encryptedHexStr);
            var decrypt = CryptoJS.AES.decrypt(srcs, key, {
                iv: iv,
                mode: CryptoJS.mode.CBC,
                padding: CryptoJS.pad.Pkcs7
            });
            var decryptedStr = decrypt.toString(CryptoJS.enc.Utf8);
            return decryptedStr.toString();
        }
    &lt;/script&gt;
    &lt;script&gt;
        var str = &quot;123456&quot;;
        var encrypted = encrypt(str);
        var decrypt1 = decrypt(encrypted.toString());
        document.writeln(&quot;aes cbc 加密 解密&quot;);
        document.writeln(&quot;&lt;br/&gt;&quot;);
        document.writeln(&quot;待加密：&quot; + str);
        document.writeln(&quot;&lt;br/&gt;&quot;);
        document.writeln(&quot;加密的密文:&quot;.concat(encrypted));
        document.writeln(&quot;&lt;br/&gt;&quot;);
        document.writeln(&quot;解密密文的结果:&quot; + decrypt1);
    &lt;/script&gt;
&lt;/body&gt;

&lt;/html&gt;
</code></pre>
<p>代码效果如下图<br>
<img src="https://s4.ax1x.com/2022/02/27/bneggJ.png" alt="demo1" loading="lazy"></p>
<h2 id="其他应用">其他应用</h2>
<p>借助crypto-js还可以实现一些很好玩的加密，例如静态页面文章的加密。出于某种原因我的文章“造谣人士生平事”之前就使用了这种加密方式。<br>
判断文章标题是“加密”开头后，就引入aes.js文件</p>
<pre><code>&lt;script&gt;
        
        var postTitleValue = document.querySelector(&quot;.post-title&quot;).innerHTML.trim();
        if (postTitleValue.slice(0, 2) === &quot;加密&quot;) {

            var oScript = document.createElement(&quot;script&quot;);
            oScript.src = &quot;./aes.js&quot;;
            document.body.appendChild(oScript);
        }
    &lt;/script&gt;
</code></pre>
<p>引入aes.js后添加密钥和密钥偏移量输入框，添加加密解密函数，添加点击事件。默认的密钥和密码偏移量都为&quot;1234560000000000&quot;，但是千万不要使用默认密码和密钥，最方便的做法是使用在线随机数生成工具生成随机密钥和随机密钥偏移量。</p>
<pre><code>//aes加密
function encrypt(word, keyy, ivv) {
    var key = keyy ? CryptoJS.enc.Utf8.parse(keyy) : CryptoJS.enc.Utf8.parse(&quot;1234560000000000&quot;); //16位
    var iv = ivv ? CryptoJS.enc.Utf8.parse(ivv) : CryptoJS.enc.Utf8.parse(&quot;1234567890000000&quot;);
    var encrypted = '';
    if (typeof (word) == 'string') {
        var srcs = CryptoJS.enc.Utf8.parse(word);
        encrypted = CryptoJS.AES.encrypt(srcs, key, {
            iv: iv,
            mode: CryptoJS.mode.CBC,
            padding: CryptoJS.pad.Pkcs7
        });
    } else if (typeof (word) == 'object') { //对象格式的转成json字符串
        data = JSON.stringify(word);
        var srcs = CryptoJS.enc.Utf8.parse(data);
        encrypted = CryptoJS.AES.encrypt(srcs, key, {
            iv: iv,
            mode: CryptoJS.mode.CBC,
            padding: CryptoJS.pad.Pkcs7
        })
    }
    return encrypted.ciphertext.toString();
}
// aes解密
function decrypt(word, keyy, ivv) {
    var key = keyy ? CryptoJS.enc.Utf8.parse(keyy) : CryptoJS.enc.Utf8.parse(&quot;1234560000000000&quot;);
    var iv = ivv ? CryptoJS.enc.Utf8.parse(ivv) : CryptoJS.enc.Utf8.parse(&quot;1234567890000000&quot;);
    var encryptedHexStr = CryptoJS.enc.Hex.parse(word);
    var srcs = CryptoJS.enc.Base64.stringify(encryptedHexStr);
    var decrypt = CryptoJS.AES.decrypt(srcs, key, {
        iv: iv,
        mode: CryptoJS.mode.CBC,
        padding: CryptoJS.pad.Pkcs7
    });
    var decryptedStr = decrypt.toString(CryptoJS.enc.Utf8);
    return decryptedStr.toString();
}
var lock = document.createElement(&quot;div&quot;),
    input = document.createElement(&quot;input&quot;),
    inputIvv = document.createElement(&quot;input&quot;),
    btn1 = document.createElement(&quot;button&quot;),
    btn2 = document.createElement(&quot;button&quot;),
    markdown = document.querySelector(&quot;.markdown-body&quot;);
    markdown.style.display=&quot;none&quot;
lock.id = &quot;lock&quot;;
input.id = &quot;lock-input&quot;;
inputIvv.id = &quot;lock-inputIvv&quot;;
input.type=&quot;password&quot;;
inputIvv.type=&quot;password&quot;;
btn1.id = &quot;lock-btn1&quot;;
btn2.id = &quot;lock-btn2&quot;;
btn1.innerHTML = &quot;解密&quot;;
btn2.innerHTML = &quot;加密&quot;;
document.body.appendChild(lock);
lock.appendChild(input);
lock.appendChild(inputIvv);
lock.appendChild(btn1);
lock.appendChild(btn2);

btn1.onclick = function () {
    var keyy = input.value;
    var ivv = inputIvv.value;
    var markdownValue = markdown.innerHTML.trim();
    //去除生成干扰，我的文章每次生成会自动包一层div，这一步是为了保证密文永不改变内容，你们不需要这一步
    var str = markdownValue.slice(3,-4);
    console.log(str);
    var decr = decrypt(str.toString(), keyy, ivv);
    markdown.innerHTML = decr.trim();
    markdown.style.display=&quot;block&quot;
}
btn2.onclick = function () {
    var keyy = input.value;
    var ivv = inputIvv.value;
    var markdownValue = markdown.innerHTML.trim();
    var str = markdownValue;
    var decr = encrypt(str.toString(), keyy, ivv);
    markdown.innerHTML = decr.trim();
    markdown.style.display=&quot;block&quot;
}

</code></pre>
<p>加密输入框的css，使用了页面压缩，看起来比较乱。</p>
<pre><code>#lock{overflow:hidden;width:248px;position:absolute;left:50%;top:230px;margin-left:-100px}#lock-btn1,#lock-btn2{margin-left:31.5px;float:left;display:block;width:60px;height:20px;border-radius:20px;background-color:transparent;color:#000;-webkit-transition:all 150ms linear;-moz-transition:all 150ms linear;-o-transition:all 150ms linear;-ms-transition:all 150ms linear;transition:all 150ms linear;font-size:14px;font-weight:normal;text-align:center;border:1px solid #66615b}#lock-btn2{margin-left:61.5px}#lock-btn1:hover,#lock-btn2:hover{background-color:#66615b;color:rgba(255,255,255,0.7);border-color:#66615b}#lock-input,#lock-inputIvv{border-radius:20px;outline:0;padding:0 10px;width:100px;height:20px;background:transparent;color:#000;font-size:1.25em;float:left}#lock-input:hover,#lock-inputIvv:hover{background-color:#66615b;color:rgba(255,255,255,0.7);border-color:rgba(255,255,255,0.7)}
</code></pre>
<p>每次需要发布加密的文章时，将文章标题命名为”加密.XXX“，页面就会出现加密解密框，首次发布请输入密钥和密钥偏移量 点击加密，拿到密文。然后将文章内容改为密文。保存好你的密钥和密钥偏移量，以后查看加密文章时，输入密钥和密钥偏移量 点击解密，即可看到原始的文章。<br>
代码效果如下两图<br>
<img src="https://s4.ax1x.com/2022/02/27/bne2v9.md.png" alt="demo2" loading="lazy"></p>
<figure data-type="image" tabindex="1"><img src="https://s4.ax1x.com/2022/02/27/bneWuR.md.png" alt="demo3" loading="lazy"></figure>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[原神反人类的pc端操作体验]]></title>
        <id>https://xiyu.pro/post/14/</id>
        <link href="https://xiyu.pro/post/14/">
        </link>
        <updated>2021-04-20T15:44:02.000Z</updated>
        <content type="html"><![CDATA[<p>  体验完原神后，感觉原神就是一款原生开发的手游大作，对pc端来说是没有细心打磨的移植作品。原神的优点很多，有优美的画风，有漂亮的建模，还有沉浸感十足的声优。从我个人的体验角度，原神对pc端的操作手感和交互逻辑还有特别大的进步空间。</p>
<p>  游戏为了追求多端操作统一，的确需要双端操作体验相互做出妥协，但是原神中 PC端妥协的太多了，完全可以让pc端的键位设置更加符合pc游戏的操作，并且丝毫不会影响手机端现有的体验。</p>
<p>  例如，现在原神不支持“呼出鼠标”键的自定义。 ctrl是pc端其他同操作模式游戏中比较常用的呼出鼠标按键，原神把这个重要的按键赋予了“切换跑步行走状态”的功能，把alt这个按起来并不方便的按键 赋予了pc端玩家最常用的功能“呼出鼠标”。 切换跑步行走在我的体验中只有lsp欣赏角色的时候才会打开走两步，其余时间都恨不得角色移动的再快一点完全用不到。把这个平常用不到的功能放在ctrl里，只会让玩家多误触几次，我已经在设置里把“切换跑步行走状态”绑定了别的不会误触的按键。在现有操作模式下，我只能强迫自己少用鼠标多用其他快捷键。如果原神pc端可以把主界面的alt键持续按住呼出鼠标改为按下alt键呼出鼠标，再次按下alt键隐藏鼠标 ，在鼠标切出的状态随便按一下wasd移动键会自动隐藏鼠标开始移动的话，pc端使用鼠标的体验会好很多，这也是同类动作游戏的常用鼠标逻辑。</p>
<p>  原神pc端没有最小化模式，也没有后台帧率限制。手机端玩游戏就是玩游戏，一般也不会原神挂机去干别的事情。但是pc端挂机是很常见的。比如临时挂机浏览网页。把别的应用切在前台，原神既会有声音还会消耗和前台玩原神一样的系统资源，对pc玩家不是很友好。切换后台这一点我见过的做的最极限的网游是黑沙，黑沙可以直接最小化到右下角的任务栏图标区，大大减轻了挂机时的系统资源消耗。原神做不到这么极限，也应该提供最基础的后台帧率限制。我个人觉得类似古剑ol等游戏一样 ，有一个游戏切换到后台帧率限制为每秒渲染1帧，这样临时挂机也可以舒服很多。不至于gpu在原神挂机玩家浏览网页的时候忍受原神60帧渲染的压力。</p>
<p>  pc端游戏都会有快捷键和鼠标搭配使用。原神很多需要确定指令的场景，只能用鼠标硬点，没有和键盘互动的按键。这一点在移动端是合理的，因为移动端只有触摸事件。pc端是不同的，原神只是用鼠标简单粗暴的模拟了手游的触摸，没有让键盘也加入交互，pc端只有键盘和鼠标配合才能体验更佳。比如原神中点击地图上的标点 会出现删除和追踪按钮。现在有66个标点需要删除，现有的操作是鼠标点击标点，鼠标移动到删除，鼠标点删除，鼠标再移动到下一个标点，鼠标再点标点...以此类推。如果原神增加一个键盘事件来响应删除。那么在批量删除地图标点的时候，就可以鼠标只点击标点 键盘某个键用来确认删除，这样会比现在的只能用鼠标效率大大提高。就是基于这样简单模仿移动端触摸的原因，原神在操作上还有其他一些小瑕疵，比如邮件或活动鼠标点击领取原石后，还会弹出界面让玩家二次确认，移动端可以自然的再触摸一下屏幕。放到pc端还要再点击一下鼠标，非常的烦人，我都已经点确定了为什么还要再点一次，正常的pc游戏就会弹出提示过段时间提示自动消失。</p>
<p>  操作体验差不多就是这些了，拉跨的战斗锁定改动比较麻烦就不说了，希望未来可以优化一下pc端的操作吧，不求有多出色，至少也应该有最基础的功能，而不是现在这样让人感觉是在用手机模拟器玩手游。希望原神不止是手游大作，成为pc大作。</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[在warframe里弹奏国际歌的正确姿态]]></title>
        <id>https://xiyu.pro/post/13/</id>
        <link href="https://xiyu.pro/post/13/">
        </link>
        <updated>2020-12-16T15:42:57.000Z</updated>
        <content type="html"><![CDATA[<p>最近有很多朋友私聊我怎么弹奏国际歌，我也一一回复了弹奏代码和midi，还是有天诺不知道应该如何正确操作这些代码和midi，所以今天总结一下，希望通过这篇图文说明可以让国际歌唱响在wf宇宙中，同样适用于其他歌曲的弹奏。</p>
<h2 id="弹奏效果">弹奏效果</h2>
<iframe src="//player.bilibili.com/player.html?aid=712958779&bvid=BV1iD4y1X7mY&cid=262003538&page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true" width="100%" height="300px"></iframe>
<h2 id="前提">前提</h2>
<p>warframe的三线琴在商场掉落，40白金一把。<br>
<img src="https://s3.ax1x.com/2020/12/16/rlGjKA.jpg" alt="1.jpg" loading="lazy"><br>
然后把三线琴装备到了物品栏，就可以按Q键使用三线琴了。</p>
<h2 id="基本过程">基本过程</h2>
<p>想在warframe里弹奏国际歌有三种方式，第一种当然是dalao玩家的徒手弹神曲，一般人学不会。那么普通<s>天诺杂碎</s>天诺战士如何优雅的弹奏出国际歌呢，第一个办法是使用现成的三线琴代码弹奏，第二种是使用ShawzinBot脚本弹奏midi文件。</p>
<h2 id="代码弹奏">代码弹奏</h2>
<p>第一步进入三线琴界面后按w打开三线琴的歌曲选择界面<br>
<img src="https://s3.ax1x.com/2020/12/16/rlGOvd.jpg" alt="2.jpg" loading="lazy"></p>
<p>第二步打开右下角的自动播放<br>
<img src="https://s3.ax1x.com/2020/12/16/rlGbCD.jpg" alt="3.jpg" loading="lazy"></p>
<p>第三步点击“加载歌曲到内存”选项<br>
<img src="https://s3.ax1x.com/2020/12/16/rlGvDI.jpg" alt="4.jpg" loading="lazy"></p>
<p>第四步复制粘贴以下代码</p>
<p><code style="word-break: break-all;">5KAASAQSAgRAoUAwSA4KBAEBIMBQMBgJBwMCIUCQUCgSCoRCwMC4KDAJDIEDQEDgEDwKEASEQSEgREoUEwSE4KFAEFIMFQMFgJFwMF4UGASGIRGQUGgiGwRHASHQSHghHwUH4RIARIQMIgRIoSIwMI4RJARJQKJgKJoJJwKJ4MKAMKQMKYUKgUKwSK4RLARLQRLgULwUMAUMQRMYKMgKMoJMwKM4hNAhNQSNgMNoRNwSN4ROAUOQSOgMOwKPAKPQKPghPwhP4UP8SQESQUKQkKQ0EQ8MREMRUJRkUR0UR8SSARSIRSYMSoKS4KTIKTMhTYhToUT4KUISUYSUoRU4RVIRVQMVYMVoKVwMV4UWIUWYhWshW0UW4SXASXQKXgKXwEX4MYAMYQJYgUYwUY4SY8RZERZUMZkKZ0haEhaUkagkawibAhbUUbkUb0hb8icEicchckhc0hc8kdEkdUidkhd0UeEUeUheciekie8hfEhfUUfc</code></p>
<p><img src="https://s3.ax1x.com/2020/12/16/rlJSVP.jpg" alt="5.jpg" loading="lazy"><br>
点击确定，好了，你和你的队友就能听到这首热泪盈眶的国际歌了。</p>
<h2 id="脚本弹奏">脚本弹奏</h2>
<h3 id="准备工作">准备工作</h3>
<p><strong>使用弹奏脚本可能有封号风险，请谨慎操作</strong>，一般来说代码弹奏已经可以满足天诺战士的音乐需求，如果你追求更好的弹奏效果请往下看。<br>
首先我们需要下载 ShawzinBot 软件和国际歌的midi文件。<br>
ShawzinBot官方github地址为 <a href="https://github.com/ianespana/ShawzinBot">点击下载</a>，<br>
ShawzinBot国内下载链接为 <a href="https://wws.lanzoui.com/ipNaPjex8yd">点击下载</a>，根据网络任选其一安装即可。</p>
<p>然后需要下载国际歌midi文件 百度云链接: <a href="https://pan.baidu.com/s/1WYFnT8Ui_2ckGNkWfcDKZw">点击下载</a> 提取码: jmvc  (蓝凑云不支持mid音乐格式只能用速度慢的百度云了不过文件只有3kb，也慢不到哪里去)</p>
<h3 id="正式开始">正式开始</h3>
<p>第一步打开三线琴界面，按TAB按键切换到半音<br>
<img src="https://s3.ax1x.com/2020/12/16/rlGOvd.jpg" alt="2.jpg" loading="lazy"></p>
<p>第二步打开ShawzinBot，左上角选择国际歌midi文件<br>
<img src="https://s3.ax1x.com/2020/12/16/rlGLgH.png" alt="7.png" loading="lazy"></p>
<p>第三步点击ShawzinBot的播放按钮，会自动跳转到warframe开始弹奏<br>
<img src="https://s3.ax1x.com/2020/12/16/rlGq8e.png" alt="8.png" loading="lazy"></p>
<p>ok，你已经成功自动弹奏国际歌。</p>
<p>隐藏技巧：这首国际歌的midi选择1.25倍速弹奏可能更燃<br>
<img src="https://s3.ax1x.com/2020/12/16/rlGxbt.png" alt="9.png" loading="lazy"></p>
<h2 id="优缺点">优缺点</h2>
<ol>
<li>代码弹奏简单高效没有任何封号风险，但是可玩性不高</li>
<li>脚本弹奏能实现更进阶的操作，例如一个人弹奏三个人和声，然而ShawzinBot毕竟是脚本，尽管de可能对三线琴的界面使用脚本网开一面但是也不能完全排除误封号的可能性。</li>
</ol>
<h2 id="其他音乐">其他音乐</h2>
<p>那么如何寻找其他音乐的代码或者midi文件。可以在搜索引擎输入“三线琴代码”或“warframe midi”，有很多天诺战士的分享，midi文件尽量找单音轨的，如果是多音轨歌曲可以尝试使用 “MidiEditor”等免费音乐编辑软件编辑。</p>
<h2 id="感谢">感谢</h2>
<ul>
<li>国际歌的midi文件来源于 @清丰君qfj</li>
<li>@才不是绅士的阿明告诉我MidiEditor的操作方法，让我成功去除掉了原midi中的节拍。</li>
</ul>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[我心中的脱口秀大会冠军不是王勉]]></title>
        <id>https://xiyu.pro/post/12/</id>
        <link href="https://xiyu.pro/post/12/">
        </link>
        <updated>2020-09-24T15:40:37.000Z</updated>
        <content type="html"><![CDATA[<p>  脱口秀大会的冠军是王勉。脱口秀大会的冠军是王勉？用沈腾的话来说“我甚至都不知道这算不算脱口秀”。我觉得他更适合参加乐队的夏天。王勉的顺口溜脱口秀是用唱歌的方式，音乐的现场感染力本身就比文字更强一些，能看出现场观众和领笑员都很嗨，但是我个人认为脱口秀本身还是要有一些文本量来支撑自己的观点的，王勉的那首逃避称得上全场最佳十分精彩，可惜的是王勉之后的顺口溜脱口秀完全是一个模板工厂做出来的产品。这些产品有着雷同的旋律，固化的反转，甚至连反转时的怒吼都一样。</p>
<p>  王勉的确有两三首（这两三首都不在总决赛之内）很精彩的作品，但是仅仅这三首作品就说他超过了那些文本输出很强型选手我是很不认可的。在我看来，王勉和老田是有相似之处的，老田靠着car engineer爆笑全场，第二场用类似的手法场上却没有发笑。王勉运气更好一些，，用着高度相似的顺口溜脱口秀一直走到决赛打开了脱口秀大会财富密码拿下了冠军。</p>
<p>  个人觉得所谓的唱歌脱口秀就类似于武功里的奇招怪招，你说他很厉害我说那当然，但是要说他是天下第一武林盟主我第一个不认可。</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[造谣人士生平事]]></title>
        <id>https://xiyu.pro/post/11/</id>
        <link href="https://xiyu.pro/post/11/">
        </link>
        <updated>2020-09-08T15:39:22.000Z</updated>
        <content type="html"><![CDATA[<h2 id="过程">过程</h2>
<p>我看了今天举行的全国抗击新冠疫情表彰大会的直播全程，我这种易受感动体质的人看到钟南山医生、张伯礼医生、张定宇医生、陈薇医生受主席表彰的那一段更是一股激流在胸中，由衷的感谢医务工作者们在疫情中的贡献。想到前一段时间医生抗疫补贴被收回的新闻，现在这么重视医疗工作者了，希望医生不会再寒心，不然下一次鸟和兔再来了，又去哪里找弓和狗呢？</p>
<p>看完表彰大会后，去李文亮医生的微博转了转，看到他那条被训诫的微博感觉意难平，于是想把关于李医生的新闻汇总一下，纪念一下这位被训诫的散布谣言的人。</p>
<p>起因是12月30日艾芬医生在同事群发布了检测报告，报告指出有病人样本检出SARS冠状病毒高置信度阳性指标。同日李文亮医生在同学群里发布了“华南水果海鲜市场确诊了7例SARS”等消息，如下图。<br>
<img src="https://s1.ax1x.com/2020/09/08/wlpa0s.md.jpg" alt="聊天记录1" loading="lazy"><br>
<img src="https://s1.ax1x.com/2020/09/08/wlpvNt.jpg" alt="聊天记录2" loading="lazy"><br>
因为聊天截图被传出，12月31日凌晨一点半李文亮医生被叫去卫健委询问情况，天亮后又被医院监察科约谈，并在此后应要求写下了一份《不实消息外传的反思与自我批评》。</p>
<p>1月3日，李文亮被警方训诫。此前一天的1月2日，艾芬也被医院监察科谈话，称其行为加剧社会恐慌，影响武汉发展大局。</p>
<p>1月3日晚，武汉市中心医院召集各科室主任开会。根据财新记者获得的会议记录，会议强调“讲政治、讲纪律、讲科学”，不造谣、不传谣，各单位看好自己的人，严明保密纪律，要求医务人员不得在公共场合透露涉密信息，也不得通过文字、图片等可能留存证据的方式谈论相关病情。</p>
<p>李文亮医生的训诫书如下图所示，“如果你固执己见，不思悔改，继续进行违法活动，你将会受到法律的制裁。你听明白了吗？”</p>
<p><a href="https://s1.ax1x.com/2020/09/08/wlCfW6.jpg">训诫书</a><br>
同时央视新闻也报道了这件事，如下图，八名散步谣言者被查处。</p>
<p>[<img src="https://s1.ax1x.com/2020/09/08/wlptXQ.jpg" alt="新闻" loading="lazy"><br>
李文亮被训诫后一直在岗位上正常上班，当时的武汉市中心医院只允许急诊科、呼吸科和ICU的医护佩戴N95口罩，其他科室，包括李文亮所在的眼科则不允许佩戴口罩。</p>
<p>1月8日李文亮医生接诊了一名疑似新冠肺炎病例（当时肯定不知道），1月10日李文亮医生出现咳嗽发热症状。1月12日李文亮医生隔离治疗。</p>
<p>1月30日核酸检测阳性（1月30日之前多次核酸检测都是阴性）。</p>
<p>2月7日李文亮医生离开了我们。</p>
<h2 id="思考">思考</h2>
<p>以上内容来源自客观事实的梳理，重新回顾疫情起初的这些事情也让我有了一点点的思考，究竟什么是谣言，什么是造谣呢？</p>
<p>李文亮医生的事情在网络上广为人之后，有些人说“新冠肺炎本来就不是SARS，李文亮他就是在造谣”。对于这种说法我很不认同，疫情初期新的病毒正在被医生研究，虽然突然流传的病毒具体是什么还没有一个科学的结论，但是这种病毒已经出现了高置信度阳性指标：SARS冠状病毒，说明新的病毒至少在现有的病毒采集特征上是和SARS极其相似的。那么在这么相似的情况下，还同时有多位疑似病例住院，新病毒是不是存在SARS的传染力？这都是很值得怀疑的，在病毒认识尚未完整的这种情况下，去抠李文亮医生的字眼去质疑狗和犬的区别有獠无獠，我认为是十分可笑的。李文亮医生已经在自己认知范围内给出了最可能的答案，何谓之谣言？况且科学的魅力就在于它是不断发展的，现在科学家的最新研究是“通过分析基因序列，可以初步判定新冠肺炎病毒与SARS整个基因组的相似度在80%上下，与SARS属同一组别（即2b group），是一个新型的‘类SARS’或‘SARS样’冠状病毒。”。现在才证实了新型冠状病毒属于SARS相关冠状病毒，现在李文亮医生所说还是谣言吗？</p>
<p>还有一种说法是“李文亮不是吹哨人，都没有吹到我耳朵里，他只是在给亲戚朋友说而已，他也不是治疗新冠患者感染的病毒。”。看完这些人的说法，我深深的感觉人与人之间是不可能相互理解的。所以这些话只是复述自己的内心，并不试图说服任何不同想法的人。首先李文亮是一名眼科医生，正常情况下他是不会接诊新冠肺炎病例的，所以不要再说什么李医生不在一线了，可是即使是这样他还是在接诊眼科病人的时候不幸感染了新冠肺炎。</p>
<p>其次李文亮医生是不是所谓吹哨人，重点不在于扣他聊天记录不准确的字眼和抱怨他没有主观的广泛传播信息。因为第一、微信聊天不是写论文，李医生给他的同学提醒一声并不需要字字准确到完美无瑕，只要能说明主要问题即可。第二、李文亮医生只是再同学群里说一下就已经被叫去训诫了，一个普通的医生还要他当时怎么发声？决定李医生是吹哨人不在于李医生自身而在于当地当时对李医生发声的处理结果：训诫、宣布李医生造谣。李医生不是主动成为吹哨人的，正是当地这样的处理结果才导致了李医生成了吹哨人啊。</p>
<p>发声的不是李医生一个，其他的医学专家也都发声过，钟院士在研究病例后提出“没什么特殊情况，不要去武汉”“确定新冠肺炎病毒存在&quot;人传人&quot;现象”，李兰娟院士提出“武汉‘封城’已到了刻不容缓的程度”，王辰院士提出“建设‘方舱医院’”，这些院士的发声给中央防控决策提供了依据，也正是在中央的领导和科学指挥和全体医务工作者的辛苦付出以及广大群众的积极配合下我们才成功战胜了疫情。</p>
<p>法学人罗翔曾在微博上说过</p>
<blockquote>
<p>“普法一下：对于民众，只要有合理怀疑的证据就可以发声不属于谣言。对于官方，如果没有超出合理怀疑的证据，就不得随意辟谣”。</p>
</blockquote>
<p>李文亮医生的发声是在他知悉检测报告后的合理怀疑，当时为什么认定为谣言？为何被训诫？（国家监委调查组已经为李医生平反“由于中南路派出所出具训诫书不当，执法程序不规范，调查组已建议湖北省武汉市监察机关对此事进行监督纠正，督促公安机关撤销训诫书并追究有关人员责任，及时向社会公布处理结果。”这也算是对李文亮医生的一点告慰吧）</p>
<p>用最高人民法院的文章片段结尾：</p>
<blockquote>
<p>“不同个体基于认知水平的差异，对同一事物，完全可能产生不同程度的虚假信息，我们应该理解法律&gt;对个体的适度宽容态度。</p>
<p>比如，在武汉市公安机关处罚的8名发布“华南水果海鲜市场确诊7例SARS”的案件中，如果机械地理解&gt;适用法律，我们的确可以认定，鉴于新型肺炎不是SARS，说武汉出现了SARS，属于编造不实信息，且该信&gt;息造成了社会秩序的混乱，符合法律规定的编造并传播虚假信息的行为，给予其训诫或行政处罚甚至刑事处&gt;罚，都有其正当性。</p>
<p>但是，事实证明，尽管新型肺炎并不是SARS，但是信息发布者发布的内容，并非完全捏造。如果社会&gt;公众当时听信了这个“谣言”，并且基于对SARS的恐慌而采取了佩戴口罩、严格消毒、避免再去海鲜市场等措施，这对我们今天更好地防控新型肺炎，可能是一件幸事。</p>
<p>所以，执法机关面对虚假信息，应充分考虑信息发布者、传播者在主观上的恶性程度，及其对事物的认知能力。只要信息基本属实，发布者、传播者主观上并无恶意，行为客观上并未造成严重的危害，我们对这&gt;样的“虚假信息”理应保持宽容态度。</p>
<p>试图对一切不完全符合事实的信息都进行法律打击，既无法律上的必要，更无制度上的可能，甚至会让我们对谣言的打击走向法律正义价值的反面，成为削弱政府公信力的反面教材，成为削弱党的群众基础的恶&gt;性事件，成为境内外敌对势力攻击我们的无端借口。”</p>
</blockquote>
<h2 id="参考抄袭来源">参考（抄袭来源）</h2>
<p><a href="https://china.caixin.com/2020-03-10/101526309.html">财新网-武汉中心医院为何医护人员伤亡惨重 强烈建议看一下</a></p>
<p><a href="https://mp.weixin.qq.com/s/ETgXN6HInzlC8cxzhDdU9g">最高人民法院-治理有关新型肺炎的谣言问题 强烈建议看一下</a></p>
<p><a href="http://www.bjnews.com.cn/feature/2020/01/31/682076.html">新京报-对话“传谣”被训诫医生</a></p>
<p><a href="http://www.xinhuanet.com/2020-03/19/c_1125737547.htm">国家监委-涉及李文亮医生的有关情况</a></p>
<h2 id="后记">后记</h2>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[阿尔比恩如何获得白骨马]]></title>
        <id>https://xiyu.pro/post/10/</id>
        <link href="https://xiyu.pro/post/10/">
        </link>
        <updated>2020-09-04T15:37:54.000Z</updated>
        <content type="html"><![CDATA[<h2 id="关于阿尔比恩">关于阿尔比恩</h2>
<p>阿尔比恩，英文名（Albion）是一款三端互通的沙盒网游，因为近期官方加入了中文语言，所以近期阿尔比恩加入了很多中国的新鲜血液。就我个人的游戏体验来说阿尔比恩有一些类似于曾经很火爆的传奇类网游的游戏特质，有安全区，有自由PK区，有工会也有江湖。<br>
白骨马是阿尔比恩里萌新十分容易获得的一款皮肤。</p>
<h2 id="获取方法">获取方法</h2>
<p>1.在任意主城市场购买“死灵秘药”，价格为750银币左右，萌新也买得起。<br>
<img src="https://s1.ax1x.com/2020/09/05/wAyHOJ.jpg" alt="1" loading="lazy"></p>
<p>2.在市场上方的npc处兑换<br>
<img src="https://s1.ax1x.com/2020/09/05/wAy7y4.jpg" alt="2" loading="lazy"></p>
<h2 id="使用方法">使用方法</h2>
<p>阿尔比恩使用外观的方法也很简单，点击左上角的头像，点击外观，然后选中白骨马即可<br>
<img src="https://s1.ax1x.com/2020/09/05/wAyqm9.jpg" alt="3" loading="lazy"></p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[ngnix使用CDN后正确获取访客IP]]></title>
        <id>https://xiyu.pro/post/9/</id>
        <link href="https://xiyu.pro/post/9/">
        </link>
        <updated>2020-08-30T15:36:04.000Z</updated>
        <content type="html"><![CDATA[<p>如果是使用一层cdn，那么在nginx的配置文件http{}字段中加入</p>
<pre><code>    set_real_ip_from 0.0.0.0/0;
    real_ip_header X-Forwarded-For;
</code></pre>
<p>即可。</p>
<p>如果是使用了两层或以上cdn(使用了cdn和web防火墙也适用)，那么在nginx的配置文件http{}字段中加入</p>
<pre><code>    set_real_ip_from 0.0.0.0/0;
    real_ip_header X-Forwarded-For;
    real_ip_recursive on;
</code></pre>
<p>即可。</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[ngnix开启HSTS]]></title>
        <id>https://xiyu.pro/post/8/</id>
        <link href="https://xiyu.pro/post/8/">
        </link>
        <updated>2020-08-17T15:32:39.000Z</updated>
        <content type="html"><![CDATA[<h2 id="什么是hsts">什么是HSTS</h2>
<blockquote>
<p>HTTP严格传输安全协议（英语：HTTP Strict Transport Security，简称：HSTS），是一套由互联网工程任务组发布的互联网安全策略机制。网站可以选择使用HSTS策略，来让浏览器强制使用HTTPS与网站进行通信，以减少会话劫持风险。<br>
HSTS可以很大程度上解决SSL剥离攻击，因为只要浏览器曾经与服务器创建过一次安全连接，之后浏览器会强制使用HTTPS，即使链接被换成了HTTP。<br>
##开启HSTS证书的前提##<br>
正确设置了SSL证书，网站可以通过https协议正常访问<br>
##ngnix如何开启HSTS##<br>
在网站配置文件server{}中加入</p>
</blockquote>
<pre><code>add_header Strict-Transport-Security &quot;max-age=31536000;
</code></pre>
<p>如果追求更好的安全效果可以改成加入</p>
<pre><code>add_header Strict-Transport-Security &quot;max-age=31536000; includeSubdomains; preload&quot;;

</code></pre>
<h4 id="includesubdomains参数会使得浏览器在请求所有子域名时都强制要求https协议如果没有给所有子域名都添加ssl证书的打算请不要输入这个参数">includeSubdomains参数会使得浏览器在请求所有子域名时都强制要求HTTPS协议，如果没有给所有子域名都添加SSL证书的打算，请不要输入这个参数</h4>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[安利一个steam上好玩的社工解密游戏《全网公敌》]]></title>
        <id>https://xiyu.pro/post/6/</id>
        <link href="https://xiyu.pro/post/6/">
        </link>
        <updated>2020-07-28T15:31:39.000Z</updated>
        <content type="html"><![CDATA[<h2 id="发现宝藏游戏">发现宝藏游戏</h2>
<p>今天在steam上试玩了一个我很喜欢的游戏《全网公敌》，试玩版一个小时的体验，沉浸感十足，八月会发布正式版，默默地期待一下吧。刚好最近我的身边就有一个100%真实的社工案例，我把整个过程用文字和截图复述给了Aluba的工作人员，我的语言功底也不怎么好说的罗里吧嗦的给他添麻烦了，希望以后的dlc能上这个案例吧，哈哈哈。<br>
有想免费试玩的朋友可以点击文末的链接试玩，或者直接在steam里搜索全网公敌。<br>
<img src="https://s1.ax1x.com/2020/07/28/aAvj4U.jpg" alt="1.png" loading="lazy"></p>
<h2 id="关于这款游戏">关于这款游戏</h2>
<p>大家好，我们是Aluba工作室，很高兴和大家分享我们的游戏:全网公敌<br>
没错，这是一款和人肉搜索相关的游戏，同时结合了网络暴力、大数据、隐私泄露等社会问题，剧情向的解谜游戏。<br>
我们很多剧情设定就参考了真实事件，所以从一些人物形象设定图上你也能看到一些熟悉的身影，玩完游戏也能联想到现实。<br>
最开始定游戏题材时，我们也是考虑了很久。因为受这是我们的战争、请出示证件、奥威尔等优秀的独立游戏的影响，我们也想做出一款能够让玩家脱离游戏之外有所思考的游戏，因此在题材方面也是绞尽脑汁。<br>
<img src="https://s1.ax1x.com/2020/07/28/aEiv6O.jpg" alt="2.png" loading="lazy"></p>
<h2 id="题材构思">题材构思</h2>
<p>在团队立项会的“友好”沟通中，我们发现当互联网不断渗透人们的生活，使信息加速传递时，一个负面事件可以很快传遍整个互联网。<br>
在这个过程中，罪恶会被曝光、被惩治，这些会让人们大快人心；但也有人会遭受着来自网络键盘侠满怀恶意的咒骂与凌辱。当这些网络暴力不断升级，带来的结果往往会超出事件本身，更有甚者不堪压力而结束宝贵的生命。<br>
因此我们决定开发这么一款与“黑客”、“人肉”、“隐私数据泄露”题材相关的游戏，希望让玩家去扮演一名黑客，社工（人肉）目标人物，找出他们的隐私秘密。希望通过这个过程让玩家产生思考，并作出自己判断。<br>
<img src="https://s1.ax1x.com/2020/07/28/aEij1K.jpg" alt="3.png" loading="lazy"></p>
<h2 id="核心功能">核心功能</h2>
<p>经过一年多的努力，我们完成了一部分游戏的构想，实现了一些社工（人肉）手段，并将它们融入进了我们的游戏中：</p>
<h3 id="网络搜索">网络搜索</h3>
<p>玩家通过浏览器搜索功能收集目标对象的基础信息。</p>
<h3 id="数据库">数据库</h3>
<p>利用已知信息输入到数据库中，通过筛选后或许目标对象的其他信息。</p>
<h3 id="破解">破解</h3>
<p>通过获得的目标人物信息来生成密码，用于登陆各平台的账户（包括邮箱、社交平台、聊天软件等）。</p>
<h3 id="伪装">伪装</h3>
<p>获取目标对象的需求、社交圈等，根据信息选择伪装，通过和目标对象接触套取更多信息。</p>
<h3 id="聊天套话">聊天套话</h3>
<p>添加目标对象为好友后，进行聊天套话获取信息。</p>
<h3 id="图片分析">图片分析</h3>
<p>从图片中获取有价值的信息内容及相关线索。</p>
<h3 id="钓鱼">钓鱼</h3>
<p>发送钓鱼链接侵入目标人物的硬件设备（电脑、手机），获取到隐私信息。</p>
<p>当然，后期还会解锁更多的高阶社工方法！<br>
<img src="https://s1.ax1x.com/2020/07/28/aEiXp6.jpg" alt="4.png" loading="lazy"></p>
<h2 id="游戏玩法">游戏玩法</h2>
<p>游戏中玩家扮演一名黑客，接受记者的委托，完成一个个社工事件。<br>
在整个过程中，玩家需要使用多种社工方法来达到最终目的。<br>
每个社工方法都会有相应的使用条件，使用成功会获得线索。<br>
游戏会对玩家的行为进行善恶判定，不同的判定会触发对应的剧情走向。<br>
<img src="https://s1.ax1x.com/2020/07/28/aEkPrF.jpg" alt="5.png" loading="lazy"></p>
<h2 id="下载地址">下载地址</h2>
<p><a href="https://store.steampowered.com/app/1216710/">点击进入steam页面</a></p>
<h5 id="本文出现的图片和绝大文字搬运自steam页面aluba工作室版权所有">本文出现的图片和绝大文字搬运自steam页面，Aluba工作室版权所有</h5>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[《二狗子汉奸李富贵》节选]]></title>
        <id>https://xiyu.pro/post/5/</id>
        <link href="https://xiyu.pro/post/5/">
        </link>
        <updated>2020-07-07T15:29:34.000Z</updated>
        <content type="html"><![CDATA[<blockquote>
<p>亨利：我在广州待了一阵子，我发觉你们中国人什么都吃。”</p>
<p>李富贵：“哈哈，你说的是广东人，中国别的地方没有那么宽的食谱，不过广东人也不是什么都吃，好像他们就不太喜欢吃狗。”</p>
<p>亨利：“吃狗？”亨利的语调开始打颤了。</p>
<p>李富贵：“是啊，吃狗，有什么问题吗？”</p>
<p>“人怎么可以吃狗。”</p>
<p>李富贵：“人为什么不可以吃狗，你刚刚说中国人什么都吃，我还以为你知道呢。”</p>
<p>亨利：“我刚才说的是指蛇、猴子一类的东西，可是狗是人类的朋友，人怎能吃自己的朋友呢？”</p>
<p>李富贵：“啊，对啊，狗是人类的朋友，我怎么把这个给忘了。”李富贵作出一幅恍然大悟的样子，“可是，亨利先生，你吃猪吗？”</p>
<p>亨利：“吃啊，我不是穆斯林。”</p>
<p>李富贵：“那难道猪是您的仇人吗？”</p>
<p>这下亨利听出李富贵是话里有话了，这个中国人似乎想和自己进行一场辩论，哼哼，叫你这个野蛮人见识一下什么是哈佛的高材生：</p>
<p>亨利：“猪当然不是人类的仇人，但是猪也不是朋友啊。”</p>
<p>李富贵：“不是仇人，也不是朋友，算个陌生人吧，您的意思是说朋友不能吃，但是可以吃陌生人，您可真高尚啊，能成为您的朋友我非常荣幸。”</p>
<p>亨利：“李将军，我说朋友只是一个比喻，并不是真的要去吃，请你不要用这种危言耸听的语气。”</p>
<p>李富贵：“好，那么我们就不用吃这个词来做填空，这个问题的主语是‘我’，谓语有您来填，宾语是‘陌生人’，随您填上一个什么词，打、杀、抢劫、强奸都可以，然后我们再来看看这句话能不能让大家接受。”</p>
<p>这一下亨利无言以对，把狗拟人化是自己提出来的，现在对手居然用这个办法来对付自己，如果自己无法应对的话，这在辩论中属于完败，他实在是无法接受这样一个结果。</p>
<p>亨利：“我不认为猪可以和狗相提并论，我们当然可以吃一些比较低级的动物，但是狗不行。”现在他只好易地再战，不提朋友那回事了。</p>
<p>李富贵：“对呀，狗比猪高级，可是老鼠更低级啊，为什么先生不吃老鼠呢？而且我想请问一下，亨利先生养狗吗？”</p>
<p>亨利：“养啊，我家有两条德国牧羊犬，还有两条牛头犬。”他很高兴可以利用回答第二个问题来回避第一个。</p>
<p>李富贵：“那你为他们什么呢？猪肉吗？”</p>
<p>这个问题显然有陷阱，可是亨利一时也猜不出对方的意图，“也喂猪肉，也喂牛肉。”</p>
<p>李富贵：“为什么你认为狗有权利吃猪呢？是因为狗比猪高级很多吗？比人与狗之间的差别还要大？”</p>
<p>又是以子之矛攻子之盾，亨利发现自己的对手有多么强大了。</p>
<p>看到亨利沉默不语李富贵拍了拍他的肩膀：“看来您不再坚持这个伪善的观点了，很好我们可以结束这场讨论去吃饭了。”</p>
<p>亨利：“您一定想在餐桌上点一盘狗肉吧？”亨利的语气有点酸酸的。</p>
<p>李富贵：“噢，不好意思，我不喜欢吃狗肉。”</p>
<p>亨利：“那，那您刚才和我争什么？”亨利张大了嘴。</p>
<p>李富贵：“我很欣赏你们西方的一句话‘我不同意你的观点，不过我会用鲜血来捍卫你表达你的观点的权利’，同样我不喜欢吃狗肉但我将捍卫别人吃狗肉的权利。”</p>
</blockquote>
]]></content>
    </entry>
</feed>